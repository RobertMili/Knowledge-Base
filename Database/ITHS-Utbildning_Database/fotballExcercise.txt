CREATE DATABASE fotball;

CREATE TABLE medlem
(
    medlemId       INT NOT NULL AUTO_INCREMENT,
    medlemNamn     TEXT,
    meldemADress   TEXT,
    medlemFödd     INT,
    medlemAntalmål INT,
    medlmemMatchID INT,
    PRIMARY KEY (medlemId)
);

CREATE TABLE fotballsMatch
(
    fotbollsMatchID           INT NOT NULL AUTO_INCREMENT,
    fotbollsMatchMotsandaralg TEXT,
    fotbollsMatchResultat     TEXT,
    fotbollsMatchPLan         TEXT,
    PRIMARY KEY (fotbollsMatchID)
);
CREATE TABLE medlemFotballsMatch
(
    medlemFotballsMatchID  INT NOT NULL AUTO_INCREMENT,
    medlemFotballsMatchMid INT,
    medlemFotballsMatchFid INT,
    PRIMARY KEY (medlemFotballsMatchID),
    FOREIGN KEY (medlemFotballsMatchMid) REFERENCES medlem (medlemId),
    FOREIGN KEY (medlemFotballsMatchFid) REFERENCES fotballsMatch (fotbollsMatchID)
);
DROP TABLE medlem;

INSERT INTO medlem(medlemNamn, meldemADress, medlemFödd, medlemAntalmål, medlmemMatchID)
VALUES ('Kalle Karslsson', 'Vägen 1 421 34 Göteborg', 2001, 4, 1),
       ('Sara Persson', 'Vägen 3 421 36 Göteborg', 2004, 2, 2),
       ('Pelle Persson', 'Vägen 8 423 45 Götebprg', 2001, 1, 1);

INSERT INTO fotballsMatch(fotbollsMatchMotsandaralg, fotbollsMatchResultat, fotbollsMatchPLan)
VALUES ('Höjdarna BK', '4-1', 'Ruddalen'),
       ('Solen BK', '3-2', 'Ullevi');

INSERT INTO medlemFotballsMatch(medlemFotballsMatchMid, medlemFotballsMatchFid)
VALUES (1, 1); -- Kalle Karlsson, 1

INSERT INTO medlemFotballsMatch(medlemFotballsMatchMid, medlemFotballsMatchFid)
VALUES (2, 2); -- Sara Persson ,2

INSERT INTO medlemFotballsMatch(medlemFotballsMatchMid, medlemFotballsMatchFid)
VALUES (2, 1); --  Pelle Persson,1

SELECT *
FROM medlemFotballsMatch;

SELECT *
FROM medlem;

SELECT *
FROM fotballsMatch;

DROP TABLE medlem;
DROP TABLE fotballsMatch;
DROP TABLE medlemFotballsMatch;

SELECT *
FROM medlem
WHERE medlemFödd > 2001;

SELECT *
FROM medlem
WHERE medlemAntalmål > 1;

SELECT *
FROM medlem
WHERE medlemAntalmål > 2;

-- 3. Visa all medlemmar som är födda senare än 2002 och gjort mer änt ett mål
SELECT *
FROM medlem
WHERE medlemFödd > 2002
  AND medlemAntalmål > 1;


SELECT fotbollsMatchResultat, fotbollsMatchMotsandaralg
FROM fotballsMatch
WHERE fotbollsMatchID = 1;

-- This is my try
SELECT medlem.medlemNamn, fotballsMatch.fotbollsMatchResultat, fotballsMatch.fotbollsMatchMotsandaralg
FROM fotballsMatch
INNER JOIN medlem ON fotballsMatch.fotbollsMatchID = medlem.medlemId;

-- 4 Visa alla medlemmar kopplat till matcher
SELECT *
FROM fotballsMatch
INNER JOIN medlem ON fotballsMatch.fotbollsMatchID = medlem.medlmemMatchID;

-- 5. Visa alla medlemmar som har varit med på matchen mot Höjdarna BK. Man ska kunna
-- visa namn, matchresultat och moståndarlag
SELECT medlem.medlemNamn, fotballsMatch.fotbollsMatchREsultat, fotballsMatch.fotbollsMatchMotsandaralg
FROM fotballsMatch
INNER JOIN medlem ON fotballsMatch.fotbollsMatchID = medlem.medlmemMatchID
WHERE fotballsMatch.fotbollsMatchMotsandaralg = 'Höjdarna BK';


SELECT *
FROM medlem;
SELECT *
FROM fotballsMatch;

-- SELECT AVG(bokPris) FROM bok_
SELECT AVG(medlemAntalmål)
FROM medlem;
--  6. Visa medelvärdet för antal mål för medlemmarna.
SELECT count(medlemAntalmål) AS antalMal FROM medlem;

SELECT *
FROM medlem
WHERE medlemFödd BETWEEN 1999 AND 2002;

-- 8. Visa medelvärdet för antal mål grupperat på matcher

SELECT fotbollsMatchMotsandaralg, avg(medlemAntalmål)
FROM fotballsMatch
INNER JOIN medlem ON fotballsMatch.fotbollsMatchID = medlem.medlmemMatchID;

-- Med view
CREATE VIEW viewMedelAntalMal AS
    SELECT fotbollsMatchMotsandaralg, avg(medlemAntalmål)
FROM fotballsMatch
INNER JOIN medlem ON fotballsMatch.